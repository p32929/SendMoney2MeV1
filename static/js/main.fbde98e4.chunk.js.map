{"version":3,"sources":["serviceWorker.js","Components/SvgHelper.js","Components/Constants.js","Others/NodeFetchHelper.js","Components/Whole.js","index.js"],"names":["Boolean","window","location","hostname","match","useStyles","makeStyles","theme","SvgHelper","props","path","color","size","style","width","height","viewBox","fill","d","Constants","github_icon","gift_icon","menu_icon","NodeFetchHelper","get","url","params","headers","callback","URLSearchParams","fetch","method","Headers","then","res","Promise","all","status","json","jsonData","console","log","post","body","JSON","stringify","put","deletee","upload","fileKeyString","fileObj","formData","FormData","append","Accept","catch","e","error","Whole","useState","data","setData","selectedOption","setSelectedOption","open","setOpen","useEffect","Grid","container","direction","AppBar","position","Toolbar","backgroundColor","Typography","variant","flexGrow","IconButton","target","href","Paper","margin","padding","item","xs","fontSize","marginBottom","marginLeft","marginRight","length","justify","CircularProgress","marginTop","Select","onOpen","onClose","onChange","event","parseInt","value","map","index","MenuItem","country","options","objectFit","src","logo","title","whiteSpace","description","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.fbde98e4.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\n\r\nconst getThemeObj = (theme) => {\r\n    return {}\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => (getThemeObj(theme)))\r\n\r\nconst SvgHelper = (props) => {\r\n    const classes = useStyles();\r\n    const {path, color = \"#FFF\", size = 24} = props\r\n\r\n    return (\r\n        <svg style={{width: size, height: size}} viewBox=\"0 0 24 24\">\r\n            <path fill={color}\r\n                  d={path}/>\r\n        </svg>\r\n    );\r\n}\r\n\r\nexport default SvgHelper;","export class Constants {\r\n    static github_icon = \"M12,2A10,10 0 0,0 2,12C2,16.42 4.87,20.17 8.84,21.5C9.34,21.58 9.5,21.27 9.5,21C9.5,20.77 9.5,20.14 9.5,19.31C6.73,19.91 6.14,17.97 6.14,17.97C5.68,16.81 5.03,16.5 5.03,16.5C4.12,15.88 5.1,15.9 5.1,15.9C6.1,15.97 6.63,16.93 6.63,16.93C7.5,18.45 8.97,18 9.54,17.76C9.63,17.11 9.89,16.67 10.17,16.42C7.95,16.17 5.62,15.31 5.62,11.5C5.62,10.39 6,9.5 6.65,8.79C6.55,8.54 6.2,7.5 6.75,6.15C6.75,6.15 7.59,5.88 9.5,7.17C10.29,6.95 11.15,6.84 12,6.84C12.85,6.84 13.71,6.95 14.5,7.17C16.41,5.88 17.25,6.15 17.25,6.15C17.8,7.5 17.45,8.54 17.35,8.79C18,9.5 18.38,10.39 18.38,11.5C18.38,15.32 16.04,16.16 13.81,16.41C14.17,16.72 14.5,17.33 14.5,18.26C14.5,19.6 14.5,20.68 14.5,21C14.5,21.27 14.66,21.59 15.17,21.5C19.14,20.16 22,16.42 22,12A10,10 0 0,0 12,2Z\"\r\n    static gift_icon = \"M9.06,1.93C7.17,1.92 5.33,3.74 6.17,6H3A2,2 0 0,0 1,8V10A1,1 0 0,0 2,11H11V8H13V11H22A1,1 0 0,0 23,10V8A2,2 0 0,0 21,6H17.83C19,2.73 14.6,0.42 12.57,3.24L12,4L11.43,3.22C10.8,2.33 9.93,1.94 9.06,1.93M9,4C9.89,4 10.34,5.08 9.71,5.71C9.08,6.34 8,5.89 8,5A1,1 0 0,1 9,4M15,4C15.89,4 16.34,5.08 15.71,5.71C15.08,6.34 14,5.89 14,5A1,1 0 0,1 15,4M2,12V20A2,2 0 0,0 4,22H20A2,2 0 0,0 22,20V12H13V20H11V12H2Z\"\r\n    static menu_icon = \"M3,6H21V8H3V6M3,11H21V13H3V11M3,16H21V18H3V16Z\"\r\n}","// Created by p32929\r\n// URL: https://gist.github.com/p32929/6143fafc629dcc1e7352d8ca268d11d1\r\n// Feel free to give it a star\r\n\r\n//\r\nconst GET = \"GET\";\r\nconst POST = \"POST\";\r\nconst PUT = \"PUT\";\r\nconst DELETE = \"DELETE\";\r\n\r\n//\r\nexport class NodeFetchHelper {\r\n    static get = (url, params, headers, callback) => {\r\n        if (params) {\r\n            params = new URLSearchParams(params);\r\n            url = url + \"?\" + params\r\n        }\r\n\r\n        fetch(url, {\r\n            method: GET,\r\n            headers: new Headers({\r\n                ...headers,\r\n                \"Content-Type\": \"application/json\",\r\n            })\r\n        }).then(res => Promise.all([res.status, res.json()]))\r\n            .then(([status, jsonData]) => {\r\n                console.log(jsonData);\r\n                console.log(status);\r\n                callback(status, jsonData)\r\n            });\r\n    }\r\n\r\n    static post = (url, params, headers, body, callback) => {\r\n        if (params) {\r\n            params = new URLSearchParams(params);\r\n            url = url + \"?\" + params\r\n        }\r\n\r\n        fetch(url, {\r\n            method: POST,\r\n            headers: new Headers({\r\n                ...headers,\r\n                \"Content-Type\": \"application/json\",\r\n            }),\r\n            body: JSON.stringify({\r\n                ...body\r\n            })\r\n        }).then(res => Promise.all([res.status, res.json()]))\r\n            .then(([status, jsonData]) => {\r\n                console.log(jsonData);\r\n                console.log(status);\r\n                callback(status, jsonData)\r\n            });\r\n    }\r\n\r\n    static put = (url, params, headers, body, callback) => {\r\n        if (params) {\r\n            params = new URLSearchParams(params);\r\n            url = url + \"?\" + params\r\n        }\r\n\r\n        fetch(url, {\r\n            method: PUT,\r\n            headers: new Headers({\r\n                ...headers,\r\n                \"Content-Type\": \"application/json\",\r\n            }),\r\n            body: JSON.stringify({\r\n                ...body\r\n            })\r\n        }).then(res => Promise.all([res.status, res.json()]))\r\n            .then(([status, jsonData]) => {\r\n                console.log(jsonData);\r\n                console.log(status);\r\n                callback(status, jsonData)\r\n            });\r\n    }\r\n\r\n    static deletee = (url, params, headers, callback) => {\r\n        if (params) {\r\n            params = new URLSearchParams(params);\r\n            url = url + \"?\" + params\r\n        }\r\n\r\n        fetch(url, {\r\n            method: DELETE,\r\n            headers: new Headers({\r\n                ...headers,\r\n                \"Content-Type\": \"application/json\",\r\n            })\r\n        }).then(res => Promise.all([res.status, res.json()]))\r\n            .then(([status, jsonData]) => {\r\n                console.log(jsonData);\r\n                console.log(status);\r\n                callback(status, jsonData)\r\n            });\r\n    }\r\n\r\n    static upload = (url, params, fileKeyString, fileObj, callback) => {\r\n        if (params) {\r\n            params = new URLSearchParams(params);\r\n            url = url + \"?\" + params\r\n        }\r\n\r\n        var formData = new FormData()\r\n        formData.append('type', 'file')\r\n        formData.append(fileKeyString, fileObj)\r\n\r\n        fetch(url, {\r\n            method: POST,\r\n            headers: {\r\n                Accept: 'application/json',\r\n            },\r\n            body: formData\r\n        }).then(res => Promise.all([res.status, res.json()]))\r\n            .then(([status, jsonData]) => {\r\n                console.log(jsonData);\r\n                console.log(status);\r\n                callback(status, jsonData)\r\n            })\r\n            .catch((e) => {\r\n                callback(500, {\r\n                    error: e\r\n                })\r\n            })\r\n    }\r\n}\r\n","import React, {useEffect, useState} from 'react';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport SvgHelper from \"./SvgHelper\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {Constants} from \"./Constants\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport {NodeFetchHelper} from '../Others/NodeFetchHelper'\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nconst getThemeObj = (theme) => {\r\n    return {}\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => (getThemeObj(theme)))\r\n\r\nconst Whole = (props) => {\r\n    const classes = useStyles();\r\n\r\n    const [data, setData] = useState([])\r\n    const [selectedOption, setSelectedOption] = useState(-1)\r\n    const [open, setOpen] = useState(false)\r\n\r\n    useEffect(() => {\r\n        NodeFetchHelper.get('https://api.npoint.io/ce98bec29331617dc4a1', null, null, (status, jsonData) => {\r\n            setData(jsonData)\r\n            setOpen(true)\r\n        })\r\n    }, [])\r\n\r\n    const welcomeTexts = `Send money directly to `\r\n    const receiversName = \"Fayaz Bin Salam\"\r\n\r\n    return (\r\n        <Grid container direction='column'>\r\n            <AppBar position='sticky'>\r\n                <Toolbar style={{backgroundColor: \"#2196F3\"}}>\r\n                    <Typography variant='h6' style={{flexGrow: 1}}>\r\n                        Send Money\r\n                    </Typography>\r\n                    <IconButton size='small' target=\"_blank\" href='https://github.com/p32929/SendMoney2Me'>\r\n                        <SvgHelper\r\n                            path={Constants.github_icon}/>\r\n                    </IconButton>\r\n                </Toolbar>\r\n            </AppBar>\r\n\r\n            <Paper style={{margin: 16, padding: 16}}>\r\n                <Grid item xs container direction='column'>\r\n                    <Typography style={{color: \"#212121\", fontSize: 16}}>Welcome</Typography>\r\n                    <Typography style={{color: \"#757575\", fontSize: 14}}>{welcomeTexts}</Typography>\r\n                    <Typography style={{color: \"#757575\", fontSize: 14}}><b>{receiversName}</b></Typography>\r\n                </Grid>\r\n            </Paper>\r\n\r\n            <Paper style={{marginBottom: 16, marginLeft: 16, marginRight: 16, padding: 16}}>\r\n                <Grid item xs container direction='column'>\r\n                    <Typography style={{color: \"#212121\", fontSize: 16}}>You are sending money from</Typography>\r\n\r\n                    {\r\n                        data.length === 0 && <Grid container direction='row' justify='center'>\r\n                            <CircularProgress style={{color: \"#4CAF50\", marginTop: 16}}/>\r\n\r\n                        </Grid>\r\n                    }\r\n\r\n                    {\r\n                        data.length > 0 && <Select open={data.length > 0 && open}\r\n                                                   onOpen={() => {\r\n                                                       setOpen(true)\r\n                                                   }}\r\n                                                   onClose={() => {\r\n                                                       setOpen(false)\r\n                                                   }} onChange={(event) => {\r\n                            setSelectedOption(parseInt(event.target.value))\r\n                        }} style={{marginTop: 16, marginRight: 16}}>\r\n                            {\r\n                                data?.map((item, index) => {\r\n                                    return <MenuItem value={index}>{item?.country}</MenuItem>\r\n                                })\r\n                            }\r\n                        </Select>\r\n                    }\r\n                </Grid>\r\n            </Paper>\r\n\r\n            {\r\n                data[selectedOption]?.options.map((value, index) => {\r\n                    return <Paper style={{marginBottom: 16, marginLeft: 16, marginRight: 16, padding: 16}}>\r\n                        <Grid container direction='row'>\r\n                            <Grid item>\r\n                                <img style={{\r\n                                    height: 36,\r\n                                    width: 36,\r\n                                    marginRight: 16,\r\n                                    objectFit: 'cover'\r\n                                }} src={data[selectedOption].options[index].logo}/>\r\n                            </Grid>\r\n                            <Grid item xs container direction='column'>\r\n                                <Typography style={{\r\n                                    color: \"#212121\",\r\n                                    fontSize: 16,\r\n                                }}>{data[selectedOption].options[index].title}</Typography>\r\n                                <Typography style={{\r\n                                    color: \"#757575\",\r\n                                    fontSize: 14,\r\n                                    whiteSpace: 'pre-line'\r\n                                }}>{data[selectedOption].options[index].description}</Typography>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Paper>\r\n                })\r\n            }\r\n\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default Whole;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport Whole from \"./Components/Whole\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Whole/>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}